@model Books_WEB_API.Models.Book
@{
    ViewBag.Title = "New";
}

<h2>New</h2>

@Html.Label("Title", "Book Title")
@Html.TextBoxFor(b => b.Title, null, new { placeholder = "Type in the book's title", @class = "form-control" })
@Html.ValidationMessageFor(b => b.Title, "", new { @class = "text-danger" })

@Html.Label("Author", "Book Author")
@Html.TextBoxFor(b => b.Author, null, new { placeholder = "Type in the book's author", @class = "form-control" })
@Html.ValidationMessageFor(b => b.Title, "", new { @class = "text-danger" })

@Html.Label("Summary", "Book Summary")
@Html.TextAreaFor(b => b.Summary, new { placeholder = "Type in the book's title", @class = "form-control", @rows = "10" })
@Html.ValidationMessageFor(b => b.Summary, "", new { @class = "text-danger" })
<br />
<button id="bt-add" class="btn btn-primary">Create</button>
@*
    Create – scotand din viewul New tag-ul form (lasand continutul) si atributul type al butonului,
    iar apoi adaugand bt-add ca id pentru buton si urmatorul cod JavaScript:
*@

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#bt-add").on("click", function () {
                if (confirm("Are you sure?")) {
                    $.ajax({
                        url: "/api/book",
                        method: "POST",
                        data: JSON.stringify({
                            Title: $("#Title").val(),
                            Author: $("#Author").val(),
                            Summary: $("#Summary").val()
                        }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function () {
                            //in caz de succes ne intoarcem in index
                            window.location.href = "/Book/Index";
                        }
                    });
                }
            });
        });
    </script>
}